name: Rust Unit Tests

on: [push, pull_request]

permissions:
  checks: write
  pull-requests: write

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cargo nextest & audit
        uses: taiki-e/install-action@v2
        with:
          tool: nextest, cargo-audit

      - name: Run cargo audit
        run: cargo audit

      - name: Format
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy # -- --deny warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo nextest run --profile ci --no-fail-fast

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: target/nextest/ci/junit.xml

      - name: Set badge color
        if: always()
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac

      - name: Create badge
        uses: emibcn/badge-action@v2.0.3
        if: always()
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests_fail }} fails, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests_skip }} skipped'
          color: ${{ env.BADGE_COLOR }}
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          always() && (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main')
        uses: andymckay/append-gist-action@0.2
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/Danconnolly/202d737d8ec36a48fbb4f7d0d4e1d779
          file: badge.svg